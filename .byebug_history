q
continue
q
VitClient.vrn(MY_CHAT_ID)
q
VitClient.vrn(MY_CHAT_ID)
VitClient.msk(MY_CHAT_ID)
VitClient.msk(message.chat.id)
VitClient.ping(true, MY_CHAT_ID)
q
VitClient.ping(true, MY_CHAT_ID)
q
APP_CONFIG[:tg_bot_api]
APP_CONFIG
TGBOTAPI
q
bot.api.get_updates.last.message.chat.id
bot.api.get_updates.last.message.chat
bot.api.get_updates.last.message
bot.api.get_updates.last
bot.api.get_updates.last.user
bot.api.get_updates.last.id
bot.api.get_updates.last.chat
bot.api.get_updates.last.chet
bot.api.get_updates.last
bot.api.get_updates.last.chat_id
bot.api.get_updates.chat
bot.api.get_updates
bot.api.fetch_updates.last
bot.fetch_updates.last
bot.fetch_updates
bot.get_updates
bot.getUpdates
q
mac_response.nil?
mac_response.blank?
q
mac_response
mac_response["message"]
q
mac_response = fetch_menu(co[:xmlId])
co = co.transform_keys(&:to_sym)
q
fetch_regions.map{ |r| r.transform_keys(&:to_sym) }
q
fetch_regions.map(&:with_indifferent_access)
q
fetch_regions.select { |r| r['region'] == 'Москва' }
fetch_regions.select { |r| r[:region] == 'Москва' }
fetch_regions
q
н
й
DateTime.now + 5.minutes
DateTime.now + PING_SLEEP
DateTime.now + PING_SLEEP.second
DateTime.now + PING_SLEEP.seconds
q
y
 н
н
й
res['products'].first
res['products']
res.keys
res
q
res
q
res
